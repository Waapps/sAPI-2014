@using BetterCms.Module.Pages.Content.Resources
@using BetterCms.Module.Pages.Controllers
@using BetterCms.Module.Pages.ViewModels.Widgets
@using BetterCms.Module.Root.Mvc.Helpers
@using Microsoft.Web.Mvc

@model EditHtmlContentWidgetViewModel
@if (Model == null)
{
    return;
}
<div class="bcms-scroll-window">
    @Html.TabbedContentMessagesBox()
    @Html.Partial("Partial/WarnMessageAboutDraft", Model)
    <div class="bcms-padded-content">
        @using (Html.BeginForm<WidgetsController>(c => c.EditHtmlContentWidget((EditHtmlContentWidgetViewModel)null), FormMethod.Post, new { @id = "bcms-advanced-content-form", @class = "bcms-ajax-form" }))
        {
            <div class="bcms-input-list-holder">
                @Html.Tooltip(PagesGlobalization.HtmlContentWidget_ContentName_Tooltip_Description)
                <div class="bcms-content-titles">@PagesGlobalization.HtmlContentWidget_ContentName_Title:</div>
                <div class="bcms-input-box">
                    @Html.TextBoxFor(model => model.Name, new { @class = "bcms-editor-field-box" })
                    @Html.BcmsValidationMessageFor(m => m.Name)
                </div>
            </div>
            
            <div class="bcms-input-list-holder">
                @Html.Tooltip(PagesGlobalization.HtmlContentWidget_Category_Tooltip_Description)
                <div class="bcms-content-titles">@PagesGlobalization.HtmlContentWidget_Category_Title:</div>
                @Html.DropDownListFor(model => model.CategoryId, Model.Categories.ToSelectList(Model.CategoryId), PagesGlobalization.HtmlContentWidget_Category_SelectCategory, new { @class = "bcms-global-select" })
            </div>   
                            
            <div class="bcms-edit-check-field">
                @Html.CheckBoxFor(model => model.EnableCustomHtml, new { @id = "bcms-enable-custom-html" })
                <div class="bcms-edit-label">@Html.Raw(PagesGlobalization.HtmlContentWidget_EnableCustomHTML_Title)</div>
            </div>             
            
            <div class="bcms-input-list-holder" id="bcms-custom-html-container" style="display: none;">
                <div class="bcms-content-titles">@PagesGlobalization.HtmlContentWidget_CustomHTML_Title</div>
                <div class="bcms-poptext-editor-holder">
                    @Html.TextAreaFor(model => model.PageContent, new { @id = "bcms-advanced-contenthtml" })
                </div>
            </div>

            <div class="bcms-edit-check-field">
                @Html.CheckBoxFor(model => model.EnableCustomCSS, new { @id = "bcms-enable-custom-css" })
                <div class="bcms-edit-label">@Html.Raw(PagesGlobalization.HtmlContentWidget_EnableCustomCSS_Title)</div>
            </div>
    
            <div class="bcms-input-list-holder" id="bcms-custom-css-container" style="display: none;">
                <div class="bcms-content-titles">@PagesGlobalization.HtmlContentWidget_CustomCSS_Title</div>
                @Html.TextAreaFor(model => model.CustomCSS, new { @class = "bcms-editor-field-area bcms-code-field bcms-code-field-css" })
            </div>
            
            <div class="bcms-edit-check-field">
                @Html.CheckBoxFor(model => model.EnableCustomJS, new { @id = "bcms-enable-custom-js" })
                <div class="bcms-edit-label">@Html.Raw(PagesGlobalization.HtmlContentWidget_EnableCustomJS_Title)</div>
            </div>

            <div class="bcms-input-list-holder" id="bcms-custom-js-container" style="display: none;">
                <div class="bcms-content-titles">@PagesGlobalization.HtmlContentWidget_CustomJS_Title</div>
                @Html.TextAreaFor(model => model.CustomJS, new { @class = "bcms-editor-field-area bcms-code-field bcms-code-field-javascript" })
            </div>            
            @Html.HiddenFor(model => model.Id, new { @id = "bcmsContentId" })
            @Html.HiddenFor(model => model.Version, new { @id = "bcmsContentVersion" })
            @Html.HiddenFor(modal => modal.DesirableStatus, new { @class = "bcms-content-desirable-status" })
            @Html.HiddenFor(modal => modal.PreviewOnPageContentId, new { @class = "bcms-preview-page-content-id" })
            @Html.HiddenFor(model => model.EditInSourceMode, new { @id = "bcms-edit-in-source-mode" })
            @Html.HiddenSubmit()
        }
    </div>
</div>
